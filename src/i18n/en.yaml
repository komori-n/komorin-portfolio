header:
  name: Toshinori TSUBOI(komori-n)

mobileheader:
  name: Tohsinori Tsuboi

top:
  name: |
    <0>
      Toshinori TSUBOI
    </0>
    <1>
      komori-n
    </1>
  lines: |
    <0>
      I'm an embedded software engineer for automotive working in Tokyo (Japan).
      I've developed device drivers for engine ECUs and platform services for Central Gateway ECU.
    </0>
    <0>
      When I was in college, I majored in applied mathematics.
      I studied theoretical and practical numerical schemes for partial differential equations (PDEs).
    </0>
    <0>
      My favorite languages are C++ and Rust, and my hobbies are Shogi (Japanese chess) and
      traveling to castles in Japan.
    </0>

skills:
  c:
    title: "C / C++"
    desc: |
      <0>
        C/C++ is one of my most experienced languages.
        I often work with C++11/14/17.
        I've made many products, from device drivers to supercomputers.
      </0>
      <0>
        I'm particularly good at speeding up software.
        So I am willing to use SFINAE and loop unrolling by hand even when they reduce readability.
      </0>
  rust:
    title: "Rust"
    desc: |
      <0>
        I prefer Rust over C++ because it is easier to read, write, and debug.
        I've made server-side applications on AWS Lambda and ones on embedded devices.
      </0>
  english:
    title: "English"
    desc: |
      <0>
        I'm not as good at English as at C++/Rust, but
        I'm working in a (primarily non-native) English-speaking workspace now.
      </0>

works:
  kh:
    title: KomoringHeights(a mate solver for Shogi)
    desc: |
      <0>
        KomoringHeights is a mate solver written in C++17.
        I used 
          <1>
            YaneuraOu
          </1>
        for the generation of legal moves and communication through USI protocol.
      </0>
      <0>
        This engine is based on the df-pn+ algorithm and implements advanced features like 
        avoidance of GHI (Graph History Interaction) problems and detection of double-count problems. 
        Moreover, it is a strong mate engine that can solve all 
        <1>
          Difficult Problems for Computer Mate Engines (Japanese).
        </1>
      </0>
  piece:
    title: Piece Placement Puzzle Solver
    desc: |
      <0>
        "Piece Placement Puzzle" is one of the famous puzzles in Shogi, like the "8 Queen Puzzle".
        It is a puzzle that all Shogi pieces on a board without attacking others.
        I made a solver for this puzzle in C++.
      </0>
      <0>
        It could find some new solutions for generalized, bi-directional puzzles.
      </0>
  blog:
    title: Blog
    url: https://komorinfo.com/blog/en/
    desc: |
      <0>
        A technical blog since July 2020 named "komori-n's ULTRAsound."
      </0>
      <0>
        I post problems encountered in daily operations and technical explanations for algorithms more than monthly.
      </0>
